!(function (Q) {
    var U = window.webpackHotUpdate
    window.webpackHotUpdate = function (Q, F) {
      !(function (Q, U) {
        if (!u[Q] || !G[Q]) return
        for (var F in ((G[Q] = !1), U)) Object.prototype.hasOwnProperty.call(U, F) && (d[F] = U[F])
        0 == --L && 0 === o && E()
      })(Q, F),
        U && U(Q, F)
    }
    var F,
      B = !0,
      n = 'e993f94dbefdb200e696',
      s = {},
      e = [],
      t = []
    function l(Q) {
      var U = Z[Q]
      if (!U) return r
      var B = function (B) {
          return (
            U.hot.active
              ? (Z[B] ? -1 === Z[B].parents.indexOf(Q) && Z[B].parents.push(Q) : ((e = [Q]), (F = B)),
                -1 === U.children.indexOf(B) && U.children.push(B))
              : (console.warn('[HMR] unexpected require(' + B + ') from disposed module ' + Q),
                (e = [])),
            r(B)
          )
        },
        n = function (Q) {
          return {
            configurable: !0,
            enumerable: !0,
            get: function () {
              return r[Q]
            },
            set: function (U) {
              r[Q] = U
            }
          }
        }
      for (var s in r)
        Object.prototype.hasOwnProperty.call(r, s) &&
          'e' !== s &&
          't' !== s &&
          Object.defineProperty(B, s, n(s))
      return (
        (B.e = function (Q) {
          return (
            'ready' === i && x('prepare'),
            o++,
            r.e(Q).then(U, function (Q) {
              throw (U(), Q)
            })
          )
          function U() {
            o--, 'prepare' === i && (a[Q] || S(Q), 0 === o && 0 === L && E())
          }
        }),
        (B.t = function (Q, U) {
          return 1 & U && (Q = B(Q)), r.t(Q, -2 & U)
        }),
        B
      )
    }
    function c(Q) {
      var U = {
        _acceptedDependencies: {},
        _declinedDependencies: {},
        _selfAccepted: !1,
        _selfDeclined: !1,
        _disposeHandlers: [],
        _main: F !== Q,
        active: !0,
        accept: function (Q, F) {
          if (void 0 === Q) U._selfAccepted = !0
          else if ('function' == typeof Q) U._selfAccepted = Q
          else if ('object' == typeof Q)
            for (var B = 0; B < Q.length; B++) U._acceptedDependencies[Q[B]] = F || function () {}
          else U._acceptedDependencies[Q] = F || function () {}
        },
        decline: function (Q) {
          if (void 0 === Q) U._selfDeclined = !0
          else if ('object' == typeof Q)
            for (var F = 0; F < Q.length; F++) U._declinedDependencies[Q[F]] = !0
          else U._declinedDependencies[Q] = !0
        },
        dispose: function (Q) {
          U._disposeHandlers.push(Q)
        },
        addDisposeHandler: function (Q) {
          U._disposeHandlers.push(Q)
        },
        removeDisposeHandler: function (Q) {
          var F = U._disposeHandlers.indexOf(Q)
          F >= 0 && U._disposeHandlers.splice(F, 1)
        },
        check: y,
        apply: V,
        status: function (Q) {
          if (!Q) return i
          g.push(Q)
        },
        addStatusHandler: function (Q) {
          g.push(Q)
        },
        removeStatusHandler: function (Q) {
          var U = g.indexOf(Q)
          U >= 0 && g.splice(U, 1)
        },
        data: s[Q]
      }
      return (F = void 0), U
    }
    var g = [],
      i = 'idle'
    function x(Q) {
      i = Q
      for (var U = 0; U < g.length; U++) g[U].call(null, Q)
    }
    var I,
      d,
      b,
      L = 0,
      o = 0,
      a = {},
      G = {},
      u = {}
    function C(Q) {
      return +Q + '' === Q ? +Q : Q
    }
    function y(Q) {
      if ('idle' !== i) throw new Error('check() is only allowed in idle status')
      return (
        (B = Q),
        x('check'),
        ((U = 1e4),
        (U = U || 1e4),
        new Promise(function (Q, F) {
          if ('undefined' == typeof XMLHttpRequest) return F(new Error('No browser support'))
          try {
            var B = new XMLHttpRequest(),
              s = r.p + '' + n + '.hot-update.json'
            B.open('GET', s, !0), (B.timeout = U), B.send(null)
          } catch (Q) {
            return F(Q)
          }
          B.onreadystatechange = function () {
            if (4 === B.readyState)
              if (0 === B.status) F(new Error('Manifest request to ' + s + ' timed out.'))
              else if (404 === B.status) Q()
              else if (200 !== B.status && 304 !== B.status)
                F(new Error('Manifest request to ' + s + ' failed.'))
              else {
                try {
                  var U = JSON.parse(B.responseText)
                } catch (Q) {
                  return void F(Q)
                }
                Q(U)
              }
          }
        })).then(function (Q) {
          if (!Q) return x('idle'), null
          ;(G = {}), (a = {}), (u = Q.c), (b = Q.h), x('prepare')
          var U = new Promise(function (Q, U) {
            I = { resolve: Q, reject: U }
          })
          d = {}
          return S(1), 'prepare' === i && 0 === o && 0 === L && E(), U
        })
      )
      var U
    }
    function S(Q) {
      u[Q]
        ? ((G[Q] = !0),
          L++,
          (function (Q) {
            var U = document.createElement('script')
            ;(U.charset = 'utf-8'),
              (U.src = r.p + '' + Q + '.' + n + '.hot-update.js'),
              document.head.appendChild(U)
          })(Q))
        : (a[Q] = !0)
    }
    function E() {
      x('ready')
      var Q = I
      if (((I = null), Q))
        if (B)
          Promise.resolve()
            .then(function () {
              return V(B)
            })
            .then(
              function (U) {
                Q.resolve(U)
              },
              function (U) {
                Q.reject(U)
              }
            )
        else {
          var U = []
          for (var F in d) Object.prototype.hasOwnProperty.call(d, F) && U.push(C(F))
          Q.resolve(U)
        }
    }
    function V(U) {
      if ('ready' !== i) throw new Error('apply() is only allowed in ready status')
      var F, B, t, l, c
      function g(Q) {
        for (
          var U = [Q],
            F = {},
            B = U.map(function (Q) {
              return { chain: [Q], id: Q }
            });
          B.length > 0;
  
        ) {
          var n = B.pop(),
            s = n.id,
            e = n.chain
          if ((l = Z[s]) && !l.hot._selfAccepted) {
            if (l.hot._selfDeclined) return { type: 'self-declined', chain: e, moduleId: s }
            if (l.hot._main) return { type: 'unaccepted', chain: e, moduleId: s }
            for (var t = 0; t < l.parents.length; t++) {
              var c = l.parents[t],
                g = Z[c]
              if (g) {
                if (g.hot._declinedDependencies[s])
                  return { type: 'declined', chain: e.concat([c]), moduleId: s, parentId: c }
                ;-1 === U.indexOf(c) &&
                  (g.hot._acceptedDependencies[s]
                    ? (F[c] || (F[c] = []), I(F[c], [s]))
                    : (delete F[c], U.push(c), B.push({ chain: e.concat([c]), id: c })))
              }
            }
          }
        }
        return { type: 'accepted', moduleId: Q, outdatedModules: U, outdatedDependencies: F }
      }
      function I(Q, U) {
        for (var F = 0; F < U.length; F++) {
          var B = U[F]
          ;-1 === Q.indexOf(B) && Q.push(B)
        }
      }
      U = U || {}
      var L = {},
        o = [],
        a = {},
        G = function () {
          console.warn('[HMR] unexpected require(' + S.moduleId + ') to disposed module')
        }
      for (var y in d)
        if (Object.prototype.hasOwnProperty.call(d, y)) {
          var S
          c = C(y)
          var E = !1,
            V = !1,
            R = !1,
            p = ''
          switch (
            ((S = d[y] ? g(c) : { type: 'disposed', moduleId: y }).chain &&
              (p = '\nUpdate propagation: ' + S.chain.join(' -> ')),
            S.type)
          ) {
            case 'self-declined':
              U.onDeclined && U.onDeclined(S),
                U.ignoreDeclined ||
                  (E = new Error('Aborted because of self decline: ' + S.moduleId + p))
              break
            case 'declined':
              U.onDeclined && U.onDeclined(S),
                U.ignoreDeclined ||
                  (E = new Error(
                    'Aborted because of declined dependency: ' + S.moduleId + ' in ' + S.parentId + p
                  ))
              break
            case 'unaccepted':
              U.onUnaccepted && U.onUnaccepted(S),
                U.ignoreUnaccepted || (E = new Error('Aborted because ' + c + ' is not accepted' + p))
              break
            case 'accepted':
              U.onAccepted && U.onAccepted(S), (V = !0)
              break
            case 'disposed':
              U.onDisposed && U.onDisposed(S), (R = !0)
              break
            default:
              throw new Error('Unexception type ' + S.type)
          }
          if (E) return x('abort'), Promise.reject(E)
          if (V)
            for (c in ((a[c] = d[c]), I(o, S.outdatedModules), S.outdatedDependencies))
              Object.prototype.hasOwnProperty.call(S.outdatedDependencies, c) &&
                (L[c] || (L[c] = []), I(L[c], S.outdatedDependencies[c]))
          R && (I(o, [S.moduleId]), (a[c] = G))
        }
      var N,
        m = []
      for (B = 0; B < o.length; B++)
        (c = o[B]),
          Z[c] &&
            Z[c].hot._selfAccepted &&
            a[c] !== G &&
            m.push({ module: c, errorHandler: Z[c].hot._selfAccepted })
      x('dispose'),
        Object.keys(u).forEach(function (Q) {
          !1 === u[Q] &&
            (function (Q) {
              delete installedChunks[Q]
            })(Q)
        })
      for (var D, W, A = o.slice(); A.length > 0; )
        if (((c = A.pop()), (l = Z[c]))) {
          var H = {},
            h = l.hot._disposeHandlers
          for (t = 0; t < h.length; t++) (F = h[t])(H)
          for (
            s[c] = H, l.hot.active = !1, delete Z[c], delete L[c], t = 0;
            t < l.children.length;
            t++
          ) {
            var v = Z[l.children[t]]
            v && (N = v.parents.indexOf(c)) >= 0 && v.parents.splice(N, 1)
          }
        }
      for (c in L)
        if (Object.prototype.hasOwnProperty.call(L, c) && (l = Z[c]))
          for (W = L[c], t = 0; t < W.length; t++)
            (D = W[t]), (N = l.children.indexOf(D)) >= 0 && l.children.splice(N, 1)
      for (c in (x('apply'), (n = b), a)) Object.prototype.hasOwnProperty.call(a, c) && (Q[c] = a[c])
      var X = null
      for (c in L)
        if (Object.prototype.hasOwnProperty.call(L, c) && (l = Z[c])) {
          W = L[c]
          var J = []
          for (B = 0; B < W.length; B++)
            if (((D = W[B]), (F = l.hot._acceptedDependencies[D]))) {
              if (-1 !== J.indexOf(F)) continue
              J.push(F)
            }
          for (B = 0; B < J.length; B++) {
            F = J[B]
            try {
              F(W)
            } catch (Q) {
              U.onErrored &&
                U.onErrored({ type: 'accept-errored', moduleId: c, dependencyId: W[B], error: Q }),
                U.ignoreErrored || X || (X = Q)
            }
          }
        }
      for (B = 0; B < m.length; B++) {
        var Y = m[B]
        ;(c = Y.module), (e = [c])
        try {
          r(c)
        } catch (Q) {
          if ('function' == typeof Y.errorHandler)
            try {
              Y.errorHandler(Q)
            } catch (F) {
              U.onErrored &&
                U.onErrored({
                  type: 'self-accept-error-handler-errored',
                  moduleId: c,
                  error: F,
                  originalError: Q
                }),
                U.ignoreErrored || X || (X = F),
                X || (X = Q)
            }
          else
            U.onErrored && U.onErrored({ type: 'self-accept-errored', moduleId: c, error: Q }),
              U.ignoreErrored || X || (X = Q)
        }
      }
      return X
        ? (x('fail'), Promise.reject(X))
        : (x('idle'),
          new Promise(function (Q) {
            Q(o)
          }))
    }
    var Z = {}
    function r(U) {
      if (Z[U]) return Z[U].exports
      var F = (Z[U] = {
        i: U,
        l: !1,
        exports: {},
        hot: c(U),
        parents: ((t = e), (e = []), t),
        children: []
      })
      return Q[U].call(F.exports, F, F.exports, l(U)), (F.l = !0), F.exports
    }
    ;(r.m = Q),
      (r.c = Z),
      (r.d = function (Q, U, F) {
        r.o(Q, U) || Object.defineProperty(Q, U, { enumerable: !0, get: F })
      }),
      (r.r = function (Q) {
        'undefined' != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(Q, Symbol.toStringTag, { value: 'Module' }),
          Object.defineProperty(Q, '__esModule', { value: !0 })
      }),
      (r.t = function (Q, U) {
        if ((1 & U && (Q = r(Q)), 8 & U)) return Q
        if (4 & U && 'object' == typeof Q && Q && Q.__esModule) return Q
        var F = Object.create(null)
        if (
          (r.r(F),
          Object.defineProperty(F, 'default', { enumerable: !0, value: Q }),
          2 & U && 'string' != typeof Q)
        )
          for (var B in Q)
            r.d(
              F,
              B,
              function (U) {
                return Q[U]
              }.bind(null, B)
            )
        return F
      }),
      (r.n = function (Q) {
        var U =
          Q && Q.__esModule
            ? function () {
                return Q.default
              }
            : function () {
                return Q
              }
        return r.d(U, 'a', U), U
      }),
      (r.o = function (Q, U) {
        return Object.prototype.hasOwnProperty.call(Q, U)
      }),
      (r.p = ''),
      (r.h = function () {
        return n
      }),
      l(3)((r.s = 3))
  })([
    ,
    function (module, __webpack_exports__, __webpack_require__) {
      'use strict'
      eval(
        "\n// EXTERNAL MODULE: ./src/polyfills.js\nvar polyfills = __webpack_require__(4);\n\n// CONCATENATED MODULE: ./src/pointers.ts\n/**\n * Utilites for working with multiple pointer events\n */\nfunction findEventIndex(pointers, event) {\n    var i = pointers.length;\n    while (i--) {\n        if (pointers[i].pointerId === event.pointerId) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction addPointer(pointers, event) {\n    var i;\n    // Add touches if applicable\n    if (event.touches) {\n        i = 0;\n        for (var _i = 0, _a = event.touches; _i < _a.length; _i++) {\n            var touch = _a[_i];\n            touch.pointerId = i++;\n            addPointer(pointers, touch);\n        }\n        return;\n    }\n    i = findEventIndex(pointers, event);\n    // Update if already present\n    if (i > -1) {\n        pointers.splice(i, 1);\n    }\n    pointers.push(event);\n}\nfunction removePointer(pointers, event) {\n    // Add touches if applicable\n    if (event.touches) {\n        // Remove all touches\n        while (pointers.length) {\n            pointers.pop();\n        }\n        return;\n    }\n    var i = findEventIndex(pointers, event);\n    if (i > -1) {\n        pointers.splice(i, 1);\n    }\n}\n/**\n * Calculates a center point between\n * the given pointer events, for panning\n * with multiple pointers.\n */\nfunction getMiddle(pointers) {\n    // Copy to avoid changing by reference\n    pointers = pointers.slice(0);\n    var event1 = pointers.pop();\n    var event2;\n    while ((event2 = pointers.pop())) {\n        event1 = {\n            clientX: (event2.clientX - event1.clientX) / 2 + event1.clientX,\n            clientY: (event2.clientY - event1.clientY) / 2 + event1.clientY\n        };\n    }\n    return event1;\n}\n/**\n * Calculates the distance between two points\n * for pinch zooming.\n * Limits to the first 2\n */\nfunction getDistance(pointers) {\n    if (pointers.length < 2) {\n        return 0;\n    }\n    var event1 = pointers[0];\n    var event2 = pointers[1];\n    return Math.sqrt(Math.pow(Math.abs(event2.clientX - event1.clientX), 2) +\n        Math.pow(Math.abs(event2.clientY - event1.clientY), 2));\n}\n\n// CONCATENATED MODULE: ./src/events.ts\nvar events;\nif (typeof window.PointerEvent === 'function') {\n    events = {\n        down: 'pointerdown',\n        move: 'pointermove',\n        up: 'pointerup pointerleave pointercancel'\n    };\n}\nelse if (typeof window.TouchEvent === 'function') {\n    events = {\n        down: 'touchstart',\n        move: 'touchmove',\n        up: 'touchend touchcancel'\n    };\n}\nelse {\n    events = {\n        down: 'mousedown',\n        move: 'mousemove',\n        up: 'mouseup mouseleave'\n    };\n}\nfunction onPointer(event, elem, handler, eventOpts) {\n    events[event].split(' ').forEach(function (name) {\n        ;\n        elem.addEventListener(name, handler, eventOpts);\n    });\n}\nfunction destroyPointer(event, elem, handler) {\n    events[event].split(' ').forEach(function (name) {\n        ;\n        elem.removeEventListener(name, handler);\n    });\n}\n\n// CONCATENATED MODULE: ./src/css.ts\nvar isIE = !!document.documentMode;\n/**\n * Proper prefixing for cross-browser compatibility\n */\nvar divStyle = document.createElement('div').style;\nvar prefixes = ['webkit', 'moz', 'ms'];\nvar prefixCache = {};\nfunction getPrefixedName(name) {\n    if (prefixCache[name]) {\n        return prefixCache[name];\n    }\n    if (name in divStyle) {\n        return (prefixCache[name] = name);\n    }\n    var capName = name[0].toUpperCase() + name.slice(1);\n    var i = prefixes.length;\n    while (i--) {\n        var prefixedName = \"\" + prefixes[i] + capName;\n        if (prefixedName in divStyle) {\n            return (prefixCache[name] = prefixedName);\n        }\n    }\n}\n/**\n * Gets a style value expected to be a number\n */\nfunction getCSSNum(name, style) {\n    return parseFloat(style[getPrefixedName(name)]) || 0;\n}\nfunction getBoxStyle(elem, name, style) {\n    if (style === void 0) { style = window.getComputedStyle(elem); }\n    // Support: FF 68+\n    // Firefox requires specificity for border\n    var suffix = name === 'border' ? 'Width' : '';\n    return {\n        left: getCSSNum(name + \"Left\" + suffix, style),\n        right: getCSSNum(name + \"Right\" + suffix, style),\n        top: getCSSNum(name + \"Top\" + suffix, style),\n        bottom: getCSSNum(name + \"Bottom\" + suffix, style)\n    };\n}\n/**\n * Set a style using the properly prefixed name\n */\nfunction setStyle(elem, name, value) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    elem.style[getPrefixedName(name)] = value;\n}\n/**\n * Constructs the transition from panzoom options\n * and takes care of prefixing the transition and transform\n */\nfunction setTransition(elem, options) {\n    var transform = getPrefixedName('transform');\n    setStyle(elem, 'transition', transform + \" \" + options.duration + \"ms \" + options.easing);\n}\n/**\n * Set the transform using the proper prefix\n */\nfunction setTransform(elem, _a, _options) {\n    var x = _a.x, y = _a.y, scale = _a.scale, isSVG = _a.isSVG;\n    setStyle(elem, 'transform', \"scale(\" + scale + \") translate(\" + x + \"px, \" + y + \"px)\");\n    if (isSVG && isIE) {\n        var matrixValue = window.getComputedStyle(elem).getPropertyValue('transform');\n        elem.setAttribute('transform', matrixValue);\n    }\n}\n/**\n * Dimensions used in containment and focal point zooming\n */\nfunction getDimensions(elem) {\n    var parent = elem.parentNode;\n    var style = window.getComputedStyle(elem);\n    var parentStyle = window.getComputedStyle(parent);\n    var rectElem = elem.getBoundingClientRect();\n    var rectParent = parent.getBoundingClientRect();\n    return {\n        elem: {\n            style: style,\n            width: rectElem.width,\n            height: rectElem.height,\n            top: rectElem.top,\n            bottom: rectElem.bottom,\n            left: rectElem.left,\n            right: rectElem.right,\n            margin: getBoxStyle(elem, 'margin', style),\n            border: getBoxStyle(elem, 'border', style)\n        },\n        parent: {\n            style: parentStyle,\n            width: rectParent.width,\n            height: rectParent.height,\n            top: rectParent.top,\n            bottom: rectParent.bottom,\n            left: rectParent.left,\n            right: rectParent.right,\n            padding: getBoxStyle(parent, 'padding', parentStyle),\n            border: getBoxStyle(parent, 'border', parentStyle)\n        }\n    };\n}\n\n// CONCATENATED MODULE: ./src/isAttached.ts\n/**\n * Determine if an element is attached to the DOM\n * Panzoom requires this so events work properly\n */\nfunction isAttached(elem) {\n    var doc = elem.ownerDocument;\n    var parent = elem.parentNode;\n    return (doc &&\n        parent &&\n        doc.nodeType === 9 &&\n        parent.nodeType === 1 &&\n        doc.documentElement.contains(parent));\n}\n\n// CONCATENATED MODULE: ./src/isExcluded.ts\nfunction getClass(elem) {\n    return (elem.getAttribute('class') || '').trim();\n}\nfunction hasClass(elem, className) {\n    return elem.nodeType === 1 && (\" \" + getClass(elem) + \" \").indexOf(\" \" + className + \" \") > -1;\n}\nfunction isExcluded(elem, options) {\n    for (var cur = elem; cur != null; cur = cur.parentNode) {\n        if (hasClass(cur, options.excludeClass) || options.exclude.indexOf(cur) > -1) {\n            return true;\n        }\n    }\n    return false;\n}\n\n// CONCATENATED MODULE: ./src/isSVGElement.ts\n/**\n * Determine if an element is SVG by checking the namespace\n * Exception: the <svg> element itself should be treated like HTML\n */\nvar rsvg = /^http:[\\w\\.\\/]+svg$/;\nfunction isSVGElement(elem) {\n    return rsvg.test(elem.namespaceURI) && elem.nodeName.toLowerCase() !== 'svg';\n}\n\n// CONCATENATED MODULE: ./src/shallowClone.ts\nfunction shallowClone(obj) {\n    var clone = {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            clone[key] = obj[key];\n        }\n    }\n    return clone;\n}\n\n// CONCATENATED MODULE: ./src/panzoom.ts\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * Panzoom for panning and zooming elements using CSS transforms\n * https://github.com/timmywil/panzoom\n *\n * Copyright Timmy Willison and other contributors\n * Released under the MIT license\n * https://github.com/timmywil/panzoom/blob/master/MIT-License.txt\n *\n */\n\n\n\n\n\n\n\n\nvar defaultOptions = {\n    animate: false,\n    canvas: false,\n    cursor: 'move',\n    disablePan: false,\n    disableZoom: false,\n    disableXAxis: false,\n    disableYAxis: false,\n    duration: 200,\n    easing: 'ease-in-out',\n    exclude: [],\n    excludeClass: 'panzoom-exclude',\n    handleStartEvent: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n    },\n    maxScale: 4,\n    minScale: 0.125,\n    overflow: 'hidden',\n    panOnlyWhenZoomed: false,\n    relative: false,\n    setTransform: setTransform,\n    startX: 0,\n    startY: 0,\n    startScale: 1,\n    step: 0.3\n};\nfunction Panzoom(elem, options) {\n    if (!elem) {\n        throw new Error('Panzoom requires an element as an argument');\n    }\n    if (elem.nodeType !== 1) {\n        throw new Error('Panzoom requires an element with a nodeType of 1');\n    }\n    if (!isAttached(elem)) {\n        throw new Error('Panzoom should be called on elements that have been attached to the DOM');\n    }\n    options = __assign(__assign({}, defaultOptions), options);\n    var isSVG = isSVGElement(elem);\n    // Set overflow on the parent\n    var parent = elem.parentNode;\n    parent.style.overflow = options.overflow;\n    parent.style.userSelect = 'none';\n    // This is important for mobile to\n    // prevent scrolling while panning\n    parent.style.touchAction = 'none';\n    (options.canvas ? parent : elem).style.cursor = options.cursor;\n    elem.style.userSelect = 'none';\n    elem.style.touchAction = 'none';\n    // The default for HTML is '50% 50%'\n    // The default for SVG is '0 0'\n    // SVG can't be changed in IE\n    setStyle(elem, 'transformOrigin', typeof options.origin === 'string' ? options.origin : isSVG ? '0 0' : '50% 50%');\n    function setOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                options[key] = opts[key];\n            }\n        }\n        // Handle option side-effects\n        if (opts.hasOwnProperty('cursor')) {\n            elem.style.cursor = opts.cursor;\n        }\n        if (opts.hasOwnProperty('overflow')) {\n            parent.style.overflow = opts.overflow;\n        }\n        if (opts.hasOwnProperty('minScale') ||\n            opts.hasOwnProperty('maxScale') ||\n            opts.hasOwnProperty('contain')) {\n            setMinMax();\n        }\n        if (opts.hasOwnProperty('disablePan')) {\n            if (opts.disablePan) {\n                destroy();\n            }\n            else {\n                bind();\n            }\n        }\n    }\n    var x = 0;\n    var y = 0;\n    var scale = 1;\n    var isPanning = false;\n    zoom(options.startScale, { animate: false });\n    // Wait for scale to update\n    // for accurate dimensions\n    // to constrain initial values\n    setTimeout(function () {\n        setMinMax();\n        pan(options.startX, options.startY, { animate: false });\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function trigger(eventName, detail, opts) {\n        if (opts.silent) {\n            return;\n        }\n        var event = new CustomEvent(eventName, { detail: detail });\n        elem.dispatchEvent(event);\n    }\n    function setTransformWithEvent(eventName, opts) {\n        var value = { x: x, y: y, scale: scale, isSVG: isSVG };\n        requestAnimationFrame(function () {\n            if (typeof opts.animate === 'boolean') {\n                if (opts.animate) {\n                    setTransition(elem, opts);\n                }\n                else {\n                    setStyle(elem, 'transition', 'none');\n                }\n            }\n            opts.setTransform(elem, value, opts);\n        });\n        trigger(eventName, value, opts);\n        trigger('panzoomchange', value, opts);\n        return value;\n    }\n    function setMinMax() {\n        if (options.contain) {\n            var dims = getDimensions(elem);\n            var parentWidth = dims.parent.width - dims.parent.border.left - dims.parent.border.right;\n            var parentHeight = dims.parent.height - dims.parent.border.top - dims.parent.border.bottom;\n            var elemWidth = dims.elem.width / scale;\n            var elemHeight = dims.elem.height / scale;\n            var elemScaledWidth = parentWidth / elemWidth;\n            var elemScaledHeight = parentHeight / elemHeight;\n            if (options.contain === 'inside') {\n                options.maxScale = Math.min(elemScaledWidth, elemScaledHeight);\n            }\n            else if (options.contain === 'outside') {\n                options.minScale = Math.max(elemScaledWidth, elemScaledHeight);\n            }\n        }\n    }\n    function constrainXY(toX, toY, toScale, panOptions) {\n        var opts = __assign(__assign({}, options), panOptions);\n        var result = { x: x, y: y, opts: opts };\n        if (!opts.force && (opts.disablePan || (opts.panOnlyWhenZoomed && scale === opts.startScale))) {\n            return result;\n        }\n        toX = parseFloat(toX);\n        toY = parseFloat(toY);\n        if (!opts.disableXAxis) {\n            result.x = (opts.relative ? x : 0) + toX;\n        }\n        if (!opts.disableYAxis) {\n            result.y = (opts.relative ? y : 0) + toY;\n        }\n        if (opts.contain === 'inside') {\n            var dims = getDimensions(elem);\n            result.x = Math.max(-dims.elem.margin.left - dims.parent.padding.left, Math.min(dims.parent.width -\n                dims.elem.width / toScale -\n                dims.parent.padding.left -\n                dims.elem.margin.left -\n                dims.parent.border.left -\n                dims.parent.border.right, result.x));\n            result.y = Math.max(-dims.elem.margin.top - dims.parent.padding.top, Math.min(dims.parent.height -\n                dims.elem.height / toScale -\n                dims.parent.padding.top -\n                dims.elem.margin.top -\n                dims.parent.border.top -\n                dims.parent.border.bottom, result.y));\n        }\n        else if (opts.contain === 'outside') {\n            var dims = getDimensions(elem);\n            var realWidth = dims.elem.width / scale;\n            var realHeight = dims.elem.height / scale;\n            var scaledWidth = realWidth * toScale;\n            var scaledHeight = realHeight * toScale;\n            var diffHorizontal = (scaledWidth - realWidth) / 2;\n            var diffVertical = (scaledHeight - realHeight) / 2;\n            var minX = (-(scaledWidth - dims.parent.width) -\n                dims.parent.padding.left -\n                dims.parent.border.left -\n                dims.parent.border.right +\n                diffHorizontal) /\n                toScale;\n            var maxX = (diffHorizontal - dims.parent.padding.left) / toScale;\n            result.x = Math.max(Math.min(result.x, maxX), minX);\n            var minY = (-(scaledHeight - dims.parent.height) -\n                dims.parent.padding.top -\n                dims.parent.border.top -\n                dims.parent.border.bottom +\n                diffVertical) /\n                toScale;\n            var maxY = (diffVertical - dims.parent.padding.top) / toScale;\n            result.y = Math.max(Math.min(result.y, maxY), minY);\n        }\n        return result;\n    }\n    function constrainScale(toScale, zoomOptions) {\n        var opts = __assign(__assign({}, options), zoomOptions);\n        var result = { scale: scale, opts: opts };\n        if (!opts.force && opts.disableZoom) {\n            return result;\n        }\n        result.scale = Math.min(Math.max(toScale, opts.minScale), opts.maxScale);\n        return result;\n    }\n    function pan(toX, toY, panOptions) {\n        var result = constrainXY(toX, toY, scale, panOptions);\n        var opts = result.opts;\n        x = result.x;\n        y = result.y;\n        return setTransformWithEvent('panzoompan', opts);\n    }\n    function zoom(toScale, zoomOptions) {\n        var result = constrainScale(toScale, zoomOptions);\n        var opts = result.opts;\n        if (!opts.force && opts.disableZoom) {\n            return;\n        }\n        toScale = result.scale;\n        var toX = x;\n        var toY = y;\n        if (opts.focal) {\n            // The difference between the point after the scale and the point before the scale\n            // plus the current translation after the scale\n            // neutralized to no scale (as the transform scale will apply to the translation)\n            var focal = opts.focal;\n            toX = (focal.x / toScale - focal.x / scale + x * toScale) / toScale;\n            toY = (focal.y / toScale - focal.y / scale + y * toScale) / toScale;\n        }\n        var panResult = constrainXY(toX, toY, toScale, { relative: false, force: true });\n        x = panResult.x;\n        y = panResult.y;\n        scale = toScale;\n        return setTransformWithEvent('panzoomzoom', opts);\n    }\n    function zoomInOut(isIn, zoomOptions) {\n        var opts = __assign(__assign(__assign({}, options), { animate: true }), zoomOptions);\n        return zoom(scale * Math.exp((isIn ? 1 : -1) * opts.step), opts);\n    }\n    function zoomIn(zoomOptions) {\n        return zoomInOut(true, zoomOptions);\n    }\n    function zoomOut(zoomOptions) {\n        return zoomInOut(false, zoomOptions);\n    }\n    function zoomToPoint(toScale, point, zoomOptions) {\n        var dims = getDimensions(elem);\n        // Instead of thinking of operating on the panzoom element,\n        // think of operating on the area inside the panzoom\n        // element's parent\n        // Subtract padding and border\n        var effectiveArea = {\n            width: dims.parent.width -\n                dims.parent.padding.left -\n                dims.parent.padding.right -\n                dims.parent.border.left -\n                dims.parent.border.right,\n            height: dims.parent.height -\n                dims.parent.padding.top -\n                dims.parent.padding.bottom -\n                dims.parent.border.top -\n                dims.parent.border.bottom\n        };\n        // Adjust the clientX/clientY to ignore the area\n        // outside the effective area\n        var clientX = point.clientX -\n            dims.parent.left -\n            dims.parent.padding.left -\n            dims.parent.border.left -\n            dims.elem.margin.left;\n        var clientY = point.clientY -\n            dims.parent.top -\n            dims.parent.padding.top -\n            dims.parent.border.top -\n            dims.elem.margin.top;\n        // Adjust the clientX/clientY for HTML elements,\n        // because they have a transform-origin of 50% 50%\n        if (!isSVG) {\n            clientX -= dims.elem.width / scale / 2;\n            clientY -= dims.elem.height / scale / 2;\n        }\n        // Convert the mouse point from it's position over the\n        // effective area before the scale to the position\n        // over the effective area after the scale.\n        var focal = {\n            x: (clientX / effectiveArea.width) * (effectiveArea.width * toScale),\n            y: (clientY / effectiveArea.height) * (effectiveArea.height * toScale)\n        };\n        return zoom(toScale, __assign(__assign({ animate: false }, zoomOptions), { focal: focal }));\n    }\n    function zoomWithWheel(event, zoomOptions) {\n        // Need to prevent the default here\n        // or it conflicts with regular page scroll\n        event.preventDefault();\n        var opts = __assign(__assign({}, options), zoomOptions);\n        // Normalize to deltaX in case shift modifier is used on Mac\n        var delta = event.deltaY === 0 && event.deltaX ? event.deltaX : event.deltaY;\n        var wheel = delta < 0 ? 1 : -1;\n        var toScale = constrainScale(scale * Math.exp((wheel * opts.step) / 3), opts).scale;\n        return zoomToPoint(toScale, event, opts);\n    }\n    function reset(resetOptions) {\n        var opts = __assign(__assign(__assign({}, options), { animate: true, force: true }), resetOptions);\n        scale = constrainScale(opts.startScale, opts).scale;\n        var panResult = constrainXY(opts.startX, opts.startY, scale, opts);\n        x = panResult.x;\n        y = panResult.y;\n        return setTransformWithEvent('panzoomreset', opts);\n    }\n    var origX;\n    var origY;\n    var startClientX;\n    var startClientY;\n    var startScale;\n    var startDistance;\n    var pointers = [];\n    function handleDown(event) {\n        // Don't handle this event if the target is excluded\n        if (isExcluded(event.target, options)) {\n            return;\n        }\n        addPointer(pointers, event);\n        isPanning = true;\n        options.handleStartEvent(event);\n        origX = x;\n        origY = y;\n        trigger('panzoomstart', { x: x, y: y, scale: scale }, options);\n        // This works whether there are multiple\n        // pointers or not\n        var point = getMiddle(pointers);\n        startClientX = point.clientX;\n        startClientY = point.clientY;\n        startScale = scale;\n        startDistance = getDistance(pointers);\n    }\n    function move(event) {\n        if (!isPanning ||\n            origX === undefined ||\n            origY === undefined ||\n            startClientX === undefined ||\n            startClientY === undefined) {\n            return;\n        }\n        addPointer(pointers, event);\n        var current = getMiddle(pointers);\n        if (pointers.length > 1) {\n            // Use the distance between the first 2 pointers\n            // to determine the current scale\n            var diff = getDistance(pointers) - startDistance;\n            var toScale = constrainScale((diff * options.step) / 80 + startScale).scale;\n            zoomToPoint(toScale, current);\n        }\n        pan(origX + (current.clientX - startClientX) / scale, origY + (current.clientY - startClientY) / scale, {\n            animate: false\n        });\n    }\n    function handleUp(event) {\n        // Don't call panzoomend when panning with 2 touches\n        // until both touches end\n        if (pointers.length === 1) {\n            trigger('panzoomend', { x: x, y: y, scale: scale }, options);\n        }\n        // Note: don't remove all pointers\n        // Can restart without having to reinitiate all of them\n        // Remove the pointer regardless of the isPanning state\n        removePointer(pointers, event);\n        if (!isPanning) {\n            return;\n        }\n        isPanning = false;\n        origX = origY = startClientX = startClientY = undefined;\n    }\n    function bind() {\n        onPointer('down', options.canvas ? parent : elem, handleDown);\n        onPointer('move', document, move, { passive: true });\n        onPointer('up', document, handleUp, { passive: true });\n    }\n    function destroy() {\n        destroyPointer('down', options.canvas ? parent : elem, handleDown);\n        destroyPointer('move', document, move);\n        destroyPointer('up', document, handleUp);\n    }\n    if (!options.disablePan) {\n        bind();\n    }\n    return {\n        destroy: destroy,\n        getPan: function () { return ({ x: x, y: y }); },\n        getScale: function () { return scale; },\n        getOptions: function () { return shallowClone(options); },\n        pan: pan,\n        reset: reset,\n        setOptions: setOptions,\n        setStyle: function (name, value) { return setStyle(elem, name, value); },\n        zoom: zoom,\n        zoomIn: zoomIn,\n        zoomOut: zoomOut,\n        zoomToPoint: zoomToPoint,\n        zoomWithWheel: zoomWithWheel\n    };\n}\nPanzoom.defaultOptions = defaultOptions;\n/* harmony default export */ var panzoom = __webpack_exports__[\"a\"] = (Panzoom);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n"
      )
    },
    ,
    function (module, __webpack_exports__, __webpack_require__) {
      'use strict'
      eval(
        "__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_panzoom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n\nconsole.log('This is a demo version of Panzoom for testing.');\nconsole.log('It exposes a global (window.Panzoom) and should not be used in production.');\nwindow.Panzoom = _src_panzoom__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZW1vL2dsb2JhbC1wYW56b29tLnRzPzdiODAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFvQztBQUVwQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdEQUFnRCxDQUFDO0FBQzdELE9BQU8sQ0FBQyxHQUFHLENBQUMsNEVBQTRFLENBQUM7QUFPekYsTUFBTSxDQUFDLE9BQU8sR0FBRyw0REFBTyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFBhbnpvb20gZnJvbSAnLi4vc3JjL3Bhbnpvb20nXG5cbmNvbnNvbGUubG9nKCdUaGlzIGlzIGEgZGVtbyB2ZXJzaW9uIG9mIFBhbnpvb20gZm9yIHRlc3RpbmcuJylcbmNvbnNvbGUubG9nKCdJdCBleHBvc2VzIGEgZ2xvYmFsICh3aW5kb3cuUGFuem9vbSkgYW5kIHNob3VsZCBub3QgYmUgdXNlZCBpbiBwcm9kdWN0aW9uLicpXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgUGFuem9vbTogdHlwZW9mIFBhbnpvb21cbiAgfVxufVxud2luZG93LlBhbnpvb20gPSBQYW56b29tXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///3\n"
      )
    },
    function (module, exports) {
      eval(
        "/* eslint-disable no-var */\n// Support: IE11 only\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach\n}\n// Support: IE11 only\n// CustomEvent is an object instead of a constructor\nif (typeof window.CustomEvent !== 'function') {\n  window.CustomEvent = function CustomEvent(event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: null }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcG9seWZpbGxzLmpzPzA2NzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLXZhciAqL1xuLy8gU3VwcG9ydDogSUUxMSBvbmx5XG5pZiAod2luZG93Lk5vZGVMaXN0ICYmICFOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCkge1xuICBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCA9IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoXG59XG4vLyBTdXBwb3J0OiBJRTExIG9ubHlcbi8vIEN1c3RvbUV2ZW50IGlzIGFuIG9iamVjdCBpbnN0ZWFkIG9mIGEgY29uc3RydWN0b3JcbmlmICh0eXBlb2Ygd2luZG93LkN1c3RvbUV2ZW50ICE9PSAnZnVuY3Rpb24nKSB7XG4gIHdpbmRvdy5DdXN0b21FdmVudCA9IGZ1bmN0aW9uIEN1c3RvbUV2ZW50KGV2ZW50LCBwYXJhbXMpIHtcbiAgICBwYXJhbXMgPSBwYXJhbXMgfHwgeyBidWJibGVzOiBmYWxzZSwgY2FuY2VsYWJsZTogZmFsc2UsIGRldGFpbDogbnVsbCB9XG4gICAgdmFyIGV2dCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdDdXN0b21FdmVudCcpXG4gICAgZXZ0LmluaXRDdXN0b21FdmVudChldmVudCwgcGFyYW1zLmJ1YmJsZXMsIHBhcmFtcy5jYW5jZWxhYmxlLCBwYXJhbXMuZGV0YWlsKVxuICAgIHJldHVybiBldnRcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n"
      )
    }
  ])
  